<?php


namespace Dotlines\GhooriOnDemand\Tests;


use PHPUnit\Framework\TestCase;
use Dotlines\Ghoori\AccessTokenRequest;
use Dotlines\GhooriOnDemand\ChargeRequest;
use Dotlines\GhooriOnDemand\StatusRequest;
use Exception;
use GuzzleHttp\Exception\ClientException;

class StatusRequestTest extends TestCase
{
    public string $serverUrl = 'https://sb-payments.ghoori.com.bd';
    public string $tokenUrl = 'https://sb-payments.ghoori.com.bd/oauth/token';
    public string $username = 'someUser@gmail.com';
    public string $password = 'Nopass1234';
    public int $clientID = 27;
    public string $clientSecret = 'HmlIb5kqJnA9N9c79E8WzgZ6Hsoh1d5oyMbNruAw';

    public string $accessToken = "";
    public string $chargeUrl = "";
    public string $package = "";
    public string $callBackURL = "";
    public string $details = "";
    public string $mobile = ''; //optional
    public string $email = ''; //optional
    public string $reference = ''; //optional
    public string $orderID = "";
    public int $amount = 0;

    public string $statusUrl = "";


    /**
     * @throws Exception
     */
    final public function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $accessTokenRequest = AccessTokenRequest::getInstance($this->tokenUrl, $this->username, $this->password, $this->clientID, $this->clientSecret);
        $tokenResponse = $accessTokenRequest->send();

        $this->accessToken = (string)$tokenResponse['access_token'];

        $this->chargeUrl = $this->serverUrl . "/api/v2.0/charge";
        $this->package = 'BBC_Janala_Course1';
        $this->callBackURL = 'https://test-app.local';
        $this->details = 'Test Transaction'; //optional

        $this->statusUrl = 'https://sb-payments.ghoori.com.bd/api/v2.0/status' ;
        $this->orderID = 'test-app-' . random_int(111111, 999999);
        $this->amount = random_int(10, 100);
    }

    /**
     * @test
     * @throws Exception
     */
    final public function it_can_fetch_status(): void
    {
        $chargeRequest = ChargeRequest::getInstance($this->chargeUrl, $this->accessToken, $this->clientID, $this->orderID, $this->package, $this->amount, $this->callBackURL, $this->details, $this->mobile, $this->email, $this->reference);

        $chargeResponse = $chargeRequest->send();

        $spTransID = (string)$chargeResponse['spTransID'];
        $statusRequest = \Dotlines\GhooriOnDemand\StatusRequest::getInstance($this->statusUrl, $this->accessToken, $this->clientID, $spTransID);
        $statusResponse = $statusRequest->send();

        self::assertNotEmpty($statusResponse);
        self::assertArrayHasKey('processingStatus', $statusResponse);
        self::assertArrayHasKey('status', $statusResponse);
        self::assertArrayHasKey('amount', $statusResponse);
        self::assertArrayHasKey('errorCode', $statusResponse);
        self::assertArrayHasKey('errorMessage', $statusResponse);
        self::assertArrayHasKey('bKashTransID', $statusResponse);
        self::assertArrayHasKey('reference', $statusResponse);
        self::assertArrayHasKey('surcharges', $statusResponse);
        self::assertNotEmpty($statusResponse['processingStatus']);
        self::assertNotEmpty($statusResponse['status']);
        self::assertNotEmpty($statusResponse['amount']);

    }
}